clear;  close all; clc;G_ID = input('请输入查询疾病ID号：');%% normalize the ppi_networkload ppi_network;  % n is the number of Genes (8919)n = size(ppi_network,1);outDegree = sum(ppi_network,2);ppi_network = ppi_network./outDegree; %% ppi_network 已经成为概率转移矩阵load phenotype_network;[relatedDiseaseID, relatedDiseasePos] = getRelatedDiseases (G_ID, phenotype_network);% initialize priority vector R = zeros(n,1);load g_p_network;for i = 1:5  pheno = relatedDiseasePos(i)  for j = 1:n    if g_p_network(j, pheno) != 0      R(j) = 1;    endif   endforendforif sum(R)>0  R = R/sum(R);endiffor i = 1:n if R(i)!=0    fprintf("PR %d is %d\n", i,R(i));   endifendfor   % Loope = R;iterator = 50;d = 0.1;for i = 1: iterator  R = (1-d) * e + d*(ppi_network*R);endfor% Pr = sort(R);% maxPr = Pr(n); % mostRelatedGenen = Genen(n);t=sort(R);fprintf('Related genes(top10):\n');per=0;for i=1:10    [u,v]=find(R==t(n+1-i));    p=size(u,1);    per=per+p;    if per<11        for j=1:p            fprintf('%d    ',u(j));            disp(gene_name{u(j)});            fprintf('\n');        end    else        for q=1:10+p-per            fprintf('%d    ',u(q));            disp(gene_name{u(q)});            fprintf('\n');        end    endend